{
  "openapi": "3.0.0",
  "info": {
    "title": "Fraud Detection API - Detailed",
    "version": "v017",
    "description": "Detailed API specification for survey response analysis for fraudulent activity detection."
  },
  "servers": [
    {
      "url": "https://api.roundtable.ai/alias/"
    }
  ],
  "paths": {
    "/v021": {
      "post": {
        "summary": "Detailed survey response analysis",
        "description": "",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication. Include this in the header of your request."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fingerprint_id": {
                    "type": "string",
                    "description": "Optional. A unique identifier generated by the fingerprinting script.",
                    "example": "fp_789xyz"
                  },
                  "survey_id": {
                    "type": "string",
                    "description": "A unique identifier for the survey.",
                    "example": "survey_456"
                  },
                  "participant_id": {
                    "type": "string",
                    "description": "A unique identifier for the participant.",
                    "example": "participant_123"
                  },
                  "questions": {
                    "type": "object",
                    "description": "Contains the survey questions. Each key is the id of the question, and the values are the text of the open-ended survey questions as shown to the participant.",
                    "example": {
                      "Q1": "How do you feel our software has impacted your daily workflow?"
                    }
                  },
                  "responses": {
                    "type": "object",
                    "description": "Records the participant's final responses to each question.",
                    "example": {
                      "Q1": "I really like pineapple on pizza."
                    }
                  },
                  "question_histories": {
                    "type": "object",
                    "description": "Records the changes made by the participant while answering the survey. Each key is the id of the question, and the value is the array of changes generated by our Javascript tracker. See [here](https://docs.roundtable.ai/custom-integration-v020) for more instructions.",
                    "example": {
                      "Q1": [
                        {
                          "s": "I",
                          "t": 0
                        },
                        {
                          "s": "Im",
                          "t": 429
                        }
                      ]
                    }
                  },
                  "low_effort_threshold": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 10,
                    "description": "Threshold for flagging a response as low effort. Must be between 0 and 10.",
                    "default": 0
                  }
                },
                "required": [
                  "participant_id",
                  "questions",
                  "responses",
                  "survey_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Analysis result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "description": "Indicates if there was an error in processing the request.",
                      "example": false
                    },
                    "flagged": {
                      "type": "boolean",
                      "description": "Indicates if any fraudulent or inappropriate activity was detected.",
                      "example": true
                    },
                    "num_checks_failed": {
                      "type": "integer",
                      "description": "Number of checks that failed.",
                      "example": 1
                    },
                    "response_groups": {
                      "type": "object",
                      "description": "Dictionary where key corresponds to question_id and value corresponds to the cluster of duplicated responses.",
                      "example": {
                        "Q1": 1
                      }
                    },
                    "checks": {
                      "type": "object",
                      "description": "Dictionary where keys correspond to questions, and every entry is an array of strings, each string representing a failed check. Possible checks include:\n- \"Automated test: Gibberish\" - The response is not coherent or grammatical.\n- \"Automated test: Off-topic\" - The response does not address or relate to the question.\n- \"Automated test: GPT\" - The response is flagged as likely generated by a GPT model.\n- \"Automated test: Profane\" - The response contains profane or inappropriate language.\n- \"Low-effort\" - The response relates to the question but provides minimal information. This is flagged if the effort score is less than or equal to the `low_effort_threshold`.\n- \"Partial pasting\" - The response combines pasted/programmatic entry with manual typing.\n- \"Programmatic entry\" - The response was entered programmatically.\n- \"Response pasted\" - The response was pasted or entered all at once.\n- \"Self-duplicate response\" - A similar or identical answer was given to more than one question.\n- \"Cross-duplicate response\" - A similar or identical answer as another participant was provided.\n- \"Unnatural typing\" - Typing behavior flagged as likely non-human.\n",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "Q1": [
                          "Automated test: Off-topic"
                        ]
                      }
                    },
                    "effort_ratings": {
                      "type": "object",
                      "description": "Dictionary where key corresponds to question_id and value is an effort score from 1-10, with 1 being minimal effort and 10 being high effort.",
                      "additionalProperties": {
                        "type": "integer"
                      },
                      "example": {
                        "Q1": 4
                      }
                    },
                    "typing_url": {
                      "type": "string",
                      "description": "String specifying a URL for visualizing the typing behavior. Note that you need to be logged in to view these histories."
                    },
                    "model": {
                      "type": "string",
                      "description": "String specifying the model type.",
                      "example": "alias-v021"
                    },
                    "fingerprint_checks": {
                      "type": "object",
                      "description": "Information related to fingerprinting checks. Only present if a fingerprint_id was provided in the request.",
                      "properties": {
                        "device_id": {
                          "type": "string",
                          "description": "A unique digital identifier for the participant's device based on various browser and system attributes.",
                          "example": "3pzig2Tu5GtqHY1Kh1p3"
                        },
                        "ip_country": {
                          "type": "string",
                          "description": "Name of country where IP address is located.", 
                          "example": false
                        },
                        "bot": {
                          "type": "boolean",
                          "description": "Indicates if the response appears to be from an automated script or bot.",
                          "example": false
                        },
                        "vpn": {
                          "type": "boolean",
                          "description": "Indicates if we detect the participant using a Virtual Private Network.",
                          "example": false
                        },
                        "incognito": {
                          "type": "boolean",
                          "description": "Indicates if the participant's browser is in private/incognito mode.",
                          "example": false
                        },
                        "tampering": {
                          "type": "boolean",
                          "description": "Indicates if browser fingerprinting data shows signs of manipulation.",
                          "example": false
                        },
                        "virtual_machine": {
                          "type": "boolean",
                          "description": "Indicates if the request originates from virtualized hardware rather than physical hardware.",
                          "example": false
                        },
                        "duplicate": {
                          "type": "boolean",
                          "description": "Indicates whether there was a previous API call with the same survey_id and fingerprint device_id.",
                          "example": false
                        },
                        "error": {
                          "type": "boolean",
                          "description": "Indicates whether there was an error getting the fingerprint info.",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v020": {
      "post": {
        "summary": "Detailed survey response analysis",
        "description": "",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication. Include this in the header of your request."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fingerprint_id": {
                    "type": "string",
                    "description": "Optional. A unique identifier generated by the fingerprinting script.",
                    "example": "fp_789xyz"
                  },
                  "survey_id": {
                    "type": "string",
                    "description": "A unique identifier for the survey.",
                    "example": "survey_456"
                  },
                  "participant_id": {
                    "type": "string",
                    "description": "A unique identifier for the participant.",
                    "example": "participant_123"
                  },
                  "questions": {
                    "type": "object",
                    "description": "Contains the survey questions. Each key is the id of the question, and the values are the text of the open-ended survey questions as shown to the participant.",
                    "example": {
                      "Q1": "How do you feel our software has impacted your daily workflow?"
                    }
                  },
                  "responses": {
                    "type": "object",
                    "description": "Records the participant's final responses to each question.",
                    "example": {
                      "Q1": "I really like pineapple on pizza."
                    }
                  },
                  "question_histories": {
                    "type": "object",
                    "description": "Records the changes made by the participant while answering the survey. Each key is the id of the question, and the value is the array of changes generated by our Javascript tracker. See [here](https://docs.roundtable.ai/custom-integration-v020) for more instructions.",
                    "example": {
                      "Q1": [
                        {
                          "s": "I",
                          "t": 0
                        },
                        {
                          "s": "Im",
                          "t": 429
                        }
                      ]
                    }
                  },
                  "low_effort_threshold": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 10,
                    "description": "Threshold for flagging a response as low effort. Must be between 0 and 10.",
                    "default": 0
                  }
                },
                "required": [
                  "participant_id",
                  "questions",
                  "responses",
                  "survey_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Analysis result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "description": "Indicates if there was an error in processing the request.",
                      "example": false
                    },
                    "flagged": {
                      "type": "boolean",
                      "description": "Indicates if any fraudulent or inappropriate activity was detected.",
                      "example": true
                    },
                    "num_checks_failed": {
                      "type": "integer",
                      "description": "Number of checks that failed.",
                      "example": 1
                    },
                    "response_groups": {
                      "type": "object",
                      "description": "Dictionary where key corresponds to question_id and value corresponds to the cluster of duplicated responses.",
                      "example": {
                        "Q1": 1
                      }
                    },
                    "checks": {
                      "type": "object",
                      "description": "Dictionary where keys correspond to questions, and every entry is an array of strings, each string representing a failed check. Possible checks include:\n- \"Automated test: Gibberish\" - The response is not coherent or grammatical.\n- \"Automated test: Off-topic\" - The response does not address or relate to the question.\n- \"Automated test: GPT\" - The response is flagged as likely generated by a GPT model.\n- \"Automated test: Profane\" - The response contains profane or inappropriate language.\n- \"Low-effort\" - The response relates to the question but provides minimal information. This is flagged if the effort score is less than or equal to the `low_effort_threshold`.\n- \"Partial pasting\" - The response combines pasted/programmatic entry with manual typing.\n- \"Programmatic entry\" - The response was entered programmatically.\n- \"Response pasted\" - The response was pasted or entered all at once.\n- \"Self-duplicate response\" - A similar or identical answer was given to more than one question.\n- \"Cross-duplicate response\" - A similar or identical answer as another participant was provided.\n- \"Unnatural typing\" - Typing behavior flagged as likely non-human.\n",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "Q1": [
                          "Automated test: Off-topic"
                        ]
                      }
                    },
                    "effort_ratings": {
                      "type": "object",
                      "description": "Dictionary where key corresponds to question_id and value is an effort score from 1-10, with 1 being minimal effort and 10 being high effort.",
                      "additionalProperties": {
                        "type": "integer"
                      },
                      "example": {
                        "Q1": 4
                      }
                    },
                    "typing_url": {
                      "type": "string",
                      "description": "String specifying a URL for visualizing the typing behavior. Note that you need to be logged in to view these histories."
                    },
                    "model": {
                      "type": "string",
                      "description": "String specifying the model type.",
                      "example": "alias-v020"
                    },
                    "fingerprint_checks": {
                      "type": "object",
                      "description": "Information related to fingerprinting checks. Only present if a fingerprint_id was provided in the request.",
                      "properties": {
                        "device_id": {
                          "type": "string",
                          "description": "A unique digital identifier for the participant's device based on various browser and system attributes.",
                          "example": "3pzig2Tu5GtqHY1Kh1p3"
                        },
                        "duplicate": {
                          "type": "boolean",
                          "description": "Indicates whether there was a previous API call with the same survey_id and fingerprint device_id.",
                          "example": false
                        },
                        "error": {
                          "type": "boolean",
                          "description": "Indicates whether there was an error getting the fingerprint info.",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v017": {
      "post": {
        "summary": "Detailed survey response analysis",
        "description": "",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication. Include this in the header of your request."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "participant_id": {
                    "type": "string",
                    "description": "A unique identifier for the participant.",
                    "example": "participant_123"
                  },
                  "question_histories": {
                    "type": "object",
                    "description": "Records the changes made by the participant while answering the survey. Each key is the id of the question, and the value is the array of changes generated by our Javascript tracker. See [here](https://docs.roundtable.ai/custom-integration) for more instructions.",
                    "example": {
                      "Q1": [
                        {
                          "s": "I",
                          "t": 0
                        },
                        {
                          "s": "Im",
                          "t": 429
                        }
                      ]
                    }
                  },
                  "questions": {
                    "type": "object",
                    "description": "Contains the survey questions. Each key is the id of the question, and the values are the text of the open-ended survey questions as shown to the participant.",
                    "example": {
                      "Q1": "How do you feel our software has impacted your daily workflow?"
                    }
                  },
                  "responses": {
                    "type": "object",
                    "description": "Records the participant's final responses to each question.",
                    "example": {
                      "Q1": "I really like pineapple on pizza."
                    }
                  },
                  "survey_id": {
                    "type": "string",
                    "description": "A unique identifier for the survey.",
                    "example": "survey_456"
                  },
                  "low_effort_threshold": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 10,
                    "description": "Threshold for flagging a response as low effort. Must be between 0 and 10.",
                    "default": 0
                  }
                },
                "required": [
                  "participant_id",
                  "questions",
                  "responses",
                  "survey_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Analysis result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "description": "Indicates if there was an error in processing the request.",
                      "example": false
                    },
                    "flagged": {
                      "type": "boolean",
                      "description": "Indicates if any fraudulent or inappropriate activity was detected.",
                      "example": true
                    },
                    "num_checks_failed": {
                      "type": "integer",
                      "description": "Number of checks that failed.",
                      "example": 1
                    },
                    "response_groups": {
                      "type": "object",
                      "description": "Dictionary where key corresponds to question_id and value corresponds to the cluster of duplicated responses.",
                      "example": {
                        "Q1": 1
                      }
                    },
                    "checks": {
                      "type": "object",
                      "description": "Dictionary where keys correspond to questions, and every entry is an array of strings, each string representing a failed check. Possible checks include:\n- \"Automated test: Gibberish\" - The response is not coherent or grammatical.\n- \"Automated test: Off-topic\" - The response does not address or relate to the question.\n- \"Automated test: GPT\" - The response is flagged as likely generated by a GPT model.\n- \"Automated test: Profane\" - The response contains profane or inappropriate language.\n- \"Low-effort\" - The response relates to the question but provides minimal information. This is flagged if the effort score is less than or equal to the `low_effort_threshold`.\n- \"Partial pasting\" - The response combines pasted/programmatic entry with manual typing.\n- \"Programmatic entry\" - The response was entered programmatically.\n- \"Response pasted\" - The response was pasted or entered all at once.\n- \"Self-duplicate response\" - A similar or identical answer was given to more than one question.\n- \"Cross-duplicate response\" - A similar or identical answer as another participant was provided.\n- \"Unnatural typing\" - Typing behavior flagged as likely non-human.\n",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "Q1": [
                          "Automated test: Off-topic"
                        ]
                      }
                    },
                    "effort_ratings": {
                      "type": "object",
                      "description": "Dictionary where key corresponds to question_id and value is an effort score from 1-10, with 1 being minimal effort and 10 being high effort.",
                      "additionalProperties": {
                        "type": "integer"
                      },
                      "example": {
                        "Q1": 4
                      }
                    },
                    "typing_url": {
                      "type": "string",
                      "description": "String specifying a URL for visualizing the typing behavior. Note that you need to be logged in to view these histories."
                    },
                    "model": {
                      "type": "string",
                      "description": "String specifying the model type.",
                      "example": "alias-v017"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v016": {
      "post": {
        "summary": "Detailed survey response analysis",
        "description": "Analyzes survey responses to detect fraudulent activity with detailed request and response structure, including profanity detection.",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication. Include this in the header of your request."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "participant_id": {
                    "type": "string",
                    "description": "A unique identifier for the participant.",
                    "example": "participant_123"
                  },
                  "question_histories": {
                    "type": "object",
                    "description": "Records the changes made by the participant while answering the survey. Each key is the id of the question, and the value is the array of changes generated by our Javascript tracker. See [here](https://docs.roundtable.ai/custom-integration) for more instructions.",
                    "example": {
                      "Q1": [
                        {
                          "s": "I",
                          "t": 0
                        },
                        {
                          "s": "Im",
                          "t": 429
                        }
                      ]
                    }
                  },
                  "questions": {
                    "type": "object",
                    "description": "Contains the survey questions. Each key is the id of the question, and the values are the text of the open-ended survey questions as shown to the participant.",
                    "example": {
                      "Q1": "How do you feel our software has impacted your daily workflow?"
                    }
                  },
                  "responses": {
                    "type": "object",
                    "description": "Records the participant's final responses to each question.",
                    "example": {
                      "Q1": "I really like pineapple on pizza."
                    }
                  },
                  "survey_id": {
                    "type": "string",
                    "description": "A unique identifier for the survey.",
                    "example": "survey_456"
                  },
                  "low_effort_threshold": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 10,
                    "description": "Threshold for flagging a response as low effort. Must be between 0 and 10.",
                    "default": 0
                  }
                },
                "required": [
                  "participant_id",
                  "questions",
                  "responses",
                  "survey_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Analysis result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "description": "Indicates if there was an error in processing the request.",
                      "example": false
                    },
                    "flagged": {
                      "type": "boolean",
                      "description": "Indicates if any fraudulent or inappropriate activity was detected.",
                      "example": true
                    },
                    "num_checks_failed": {
                      "type": "integer",
                      "description": "Number of checks that failed.",
                      "example": 1
                    },
                    "response_groups": {
                      "type": "object",
                      "description": "Dictionary where key corresponds to question_id and value corresponds to the cluster of duplicated responses.",
                      "example": {
                        "Q1": 1
                      }
                    },
                    "checks": {
                      "type": "object",
                      "description": "Dictionary where keys correspond to questions, and every entry is an array of strings, each string representing a failed check. Possible checks include:\n- \"Automated test: Gibberish\" - The response is not coherent or grammatical.\n- \"Automated test: Off-topic\" - The response does not address or relate to the question.\n- \"Automated test: GPT\" - The response is flagged as likely generated by a GPT model.\n- \"Automated test: Profane\" - The response contains profane or inappropriate language.\n- \"Low-effort\" - The response relates to the question but provides minimal information. This is flagged if the effort score is less than or equal to the `low_effort_threshold`.\n- \"GPT paste artifacts\" - The text is formatted similarly to ChatGPT outputs.\n- \"Programmatic entry\" - The response was entered programmatically.\n- \"Response pasted\" - The response was pasted or entered all at once.\n- \"Self-duplicate response\" - A similar or identical answer was given to more than one question.\n- \"Cross-duplicate response\" - A similar or identical answer as another participant was provided.\n- \"Unnatural typing\" - Typing behavior flagged as likely non-human.\n",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "Q1": [
                          "Automated test: Off-topic"
                        ]
                      }
                    },
                    "effort_ratings": {
                      "type": "object",
                      "description": "Dictionary where key corresponds to question_id and value is an effort score from 1-10, with 1 being minimal effort and 10 being high effort.",
                      "additionalProperties": {
                        "type": "integer"
                      },
                      "example": {
                        "Q1": 4
                      }
                    },
                    "model": {
                      "type": "string",
                      "description": "String specifying the model type.",
                      "example": "alias-v016"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v015": {
      "post": {
        "summary": "Detailed survey response analysis",
        "description": "Analyzes survey responses to detect fraudulent activity with detailed request and response structure.",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication. Include this in the header of your request."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "participant_id": {
                    "type": "string",
                    "description": "A unique identifier for the participant.",
                    "example": "participant_123"
                  },
                  "question_histories": {
                    "type": "object",
                    "description": "Records the changes made by the participant while answering the survey. Each key is the id of the question, and the value is the array of changes generated by our Javascript tracker. See [here](https://docs.roundtable.ai/custom-integration) for more instructions.",
                    "example": {
                      "Q1": [
                        {
                          "s": "I",
                          "t": 0
                        },
                        {
                          "s": "Im",
                          "t": 429
                        }
                      ]
                    }
                  },
                  "questions": {
                    "type": "object",
                    "description": "Contains the survey questions. Each key is the id of the question, and the values are the text of the open-ended survey questions as shown to the participant.",
                    "example": {
                      "Q1": "How do you feel our software has impacted your daily workflow?"
                    }
                  },
                  "responses": {
                    "type": "object",
                    "description": "Records the participant's final responses to each question.",
                    "example": {
                      "Q1": "I really like pineapple on pizza."
                    }
                  },
                  "survey_id": {
                    "type": "string",
                    "description": "A unique identifier for the survey.",
                    "example": "survey_456"
                  },
                  "low_effort_threshold": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 10,
                    "description": "Threshold for flagging a response as low effort. Must be between 0 and 10.",
                    "default": 0
                  }
                },
                "required": [
                  "participant_id",
                  "questions",
                  "responses",
                  "survey_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Analysis result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "description": "Indicates if there was an error in processing the request.",
                      "example": false
                    },
                    "flagged": {
                      "type": "boolean",
                      "description": "Indicates the type of fraudulent activity detected. This example shows an off-topic response detected.",
                      "example": true
                    },
                    "num_checks_failed": {
                      "type": "integer",
                      "description": "Number of checks that failed.",
                      "example": 1
                    },
                    "response_groups": {
                      "type": "object",
                      "description": "Dictionary where key corresponds to question_id and value corresponds to the cluster of duplicated responses.",
                      "example": {
                        "Q1": 1
                      }
                    },
                    "checks": {
                      "type": "object",
                      "description": "Dictionary where keys correspond to questions, and every entry is an array of strings, each string representing a failed check. Possible checks include:\n- \"Automated test: Gibberish\" - The response is not coherent or grammatical.\n- \"Automated test: Off-topic\" - The response does not address or relate to the question.\n- \"Automated test: GPT\" - The response is flagged as likely generated by a GPT model.\n- \"Low-effort\" - The response relates to the question but provides minimal information. This is flagged if the effort score is less than or equal to the `low_effort_threshold`.\n- \"GPT paste artifacts\" - The text is formatted similarly to ChatGPT outputs.\n- \"Programmatic entry\" - The response was entered programmatically.\n- \"Response pasted\" - The response was pasted or entered all at once.\n- \"Self-duplicate response\" - A similar or identical answer was given to more than one question.\n- \"Cross-duplicate response\" - A similar or identical answer as another participant was provided.\n- \"Unnatural typing\" - Typing behavior flagged as likely non-human.\n",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "Q1": [
                          "Automated test: Off-topic"
                        ]
                      }
                    },
                    "effort_ratings": {
                      "type": "object",
                      "description": "Dictionary where key corresponds to question_id and value is an effort score from 1-10, with 1 being minimal effort and 10 being high effort.",
                      "additionalProperties": {
                        "type": "integer"
                      },
                      "example": {
                        "Q1": 3
                      }
                    },
                    "model": {
                      "type": "string",
                      "description": "String specifying the model type.",
                      "example": "alias-v015"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v014": {
      "post": {
        "summary": "Detailed survey response analysis",
        "description": "Analyzes survey responses to detect fraudulent activity with detailed request and response structure.",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication. Include this in the header of your request."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "participant_id": {
                    "type": "string",
                    "description": "A unique identifier for the participant.",
                    "example": "participant_123"
                  },
                  "question_histories": {
                    "type": "object",
                    "description": "Records the changes made by the participant while answering the survey. Each key is the id of the question, and the value is the array of changes generated by our Javascript tracker. See [here](https://docs.roundtable.ai/custom-integration) for more instructions.",
                    "example": {
                      "Q1": [
                        {
                          "s": "I",
                          "t": 0
                        },
                        {
                          "s": "Im",
                          "t": 429
                        }
                      ]
                    }
                  },
                  "questions": {
                    "type": "object",
                    "description": "Contains the survey questions. Each key is the id of the question, and the values are the text of the open-ended survey questions as shown to the participant.",
                    "example": {
                      "Q1": "How do you feel our software has impacted your daily workflow?"
                    }
                  },
                  "responses": {
                    "type": "object",
                    "description": "Records the participant's final responses to each question.",
                    "example": {
                      "Q1": "I really like pineapple on pizza."
                    }
                  },
                  "survey_id": {
                    "type": "string",
                    "description": "A unique identifier for the survey.",
                    "example": "survey_456"
                  }
                },
                "required": [
                  "participant_id",
                  "questions",
                  "responses",
                  "survey_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Analysis result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "description": "Indicates if there was an error in processing the request.",
                      "example": false
                    },
                    "flagged": {
                      "type": "boolean",
                      "description": "Indicates the type of fraudulent activity detected. This example shows an off-topic response detected.",
                      "example": true
                    },
                    "num_checks_failed": {
                      "type": "integer",
                      "description": "Number of checks that failed.",
                      "example": 1
                    },
                    "response_groups": {
                      "type": "object",
                      "description": "Dictionary where key corresponds to question_id and value corresponds to the cluster of duplicated responses.",
                      "example": {
                        "Q1": 1
                      }
                    },
                    "checks": {
                      "type": "object",
                      "description": "Dictionary where keys correspond to questions, and every entry is an array of strings, each string representing a failed check. Possible checks include:\n- \"Automated test: Gibberish\" - The response is not coherent or grammatical.\n- \"Automated test: Off-topic\" - The response does not address or relate to the question.\n- \"Automated test: Low-effort\" - The response relates to the question but provides minimal information.\n- \"Automated test: GPT\" - The response is flagged as likely generated by a GPT model.\n- \"GPT paste artifacts\" - The text is formatted similarly to ChatGPT outputs.\n- \"Programmatic entry\" - The response was entered programmatically.\n- \"Response pasted\" - The response was pasted or entered all at once.\n- \"Self-duplicate response\" - A similar or identical answer was given to more than one question.\n- \"Cross-duplicate response\" - A similar or identical answer as another participant was provided.\n",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "Q1": [
                          "Automated test: Off-topic"
                        ]
                      }
                    },
                    "model": {
                      "type": "string",
                      "description": "String specifying the model type.",
                      "example": "alias-v014"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v013": {
      "post": {
        "summary": "Detailed survey response analysis",
        "description": "Analyzes survey responses to detect fraudulent activity with detailed request and response structure.",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication. Include this in the header of your request."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "participant_id": {
                    "type": "string",
                    "description": "A unique identifier for the participant.",
                    "example": "participant_123"
                  },
                  "question_histories": {
                    "type": "object",
                    "description": "Records the changes made by the participant while answering the survey. Each key is the id of the question, and the value is the array of changes generated by our Javascript tracker.",
                    "example": {
                      "Q1": []
                    }
                  },
                  "questions": {
                    "type": "object",
                    "description": "Contains the survey questions. Each key is the id of the question, and the values are the text of the open-ended survey questions as shown to the participant.",
                    "example": {
                      "Q1": "How do you feel our software has impacted your daily workflow?"
                    }
                  },
                  "responses": {
                    "type": "object",
                    "description": "Records the participant's final responses to each question.",
                    "example": {
                      "Q1": "I really like pineapple on pizza."
                    }
                  },
                  "survey_id": {
                    "type": "string",
                    "description": "A unique identifier for the survey.",
                    "example": "survey_456"
                  }
                },
                "required": [
                  "participant_id",
                  "questions",
                  "responses",
                  "survey_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Analysis result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "description": "Indicates if there was an error in processing the request.",
                      "example": false
                    },
                    "flagged": {
                      "type": "boolean",
                      "description": "Indicates the type of fraudulent activity detected. This example shows an off-topic response detected.",
                      "example": true
                    },
                    "num_checks_failed": {
                      "type": "integer",
                      "description": "Number of checks that failed.",
                      "example": 1
                    },
                    "response_groups": {
                      "type": "object",
                      "description": "Dictionary where key corresponds to question_id and value corresponds to the cluster of duplicated responses.",
                      "example": {
                        "Q1": 1
                      }
                    },
                    "checks": {
                      "type": "object",
                      "description": "Dictionary where keys correspond to questions, and every entry is an array of strings, each string representing a failed check. Possible checks include:\n- \"Automated test: Gibberish\" - The response is not coherent or grammatical.\n- \"Automated test: Off-topic\" - The response does not address or relate to the question.\n- \"Automated test: Low-effort\" - The response relates to the question but provides minimal information.\n- \"Automated test: GPT\" - The response is flagged as likely generated by a GPT model.\n- \"GPT paste artifacts\" - The text is formatted similarly to ChatGPT outputs.\n- \"Response pasted\" - The response was pasted or entered programmatically.\n- \"Self-duplicate response\" - A similar or identical answer was given to more than one question.\n- \"Cross-duplicate response\" - A similar or identical answer as another participant was provided.\n",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "Q1": [
                          "Automated test: Off-topic"
                        ]
                      }
                    },
                    "model": {
                      "type": "string",
                      "description": "String specifying the model type.",
                      "example": "alias-v013"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v012": {
      "post": {
        "summary": "Detailed survey response analysis for v012",
        "description": "Analyzes survey responses to detect fraudulent activity with detailed request and response structure.",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication. Include this in the header of your request."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "participant_id": {
                    "type": "string",
                    "description": "A unique identifier for the participant.",
                    "example": "participant_123"
                  },
                  "question_histories": {
                    "type": "object",
                    "description": "Records the changes made by the participant while answering the survey. Each key is the id of the question, and the value is the array of changes generated by our Javascript tracker.",
                    "example": {
                      "Q1": []
                    }
                  },
                  "questions": {
                    "type": "object",
                    "description": "Contains the survey questions. Each key is the id of the question, and the values are the text of the open-ended survey questions as shown to the participant.",
                    "example": {
                      "Q1": "How do you feel our product has impacted your daily workflow?"
                    }
                  },
                  "responses": {
                    "type": "object",
                    "description": "Records the participant's final responses to each question.",
                    "example": {
                      "Q1": "I really like pineapple on pizza."
                    }
                  },
                  "survey_id": {
                    "type": "string",
                    "description": "A unique identifier for the survey.",
                    "example": "survey_456"
                  }
                },
                "required": [
                  "participant_id",
                  "questions",
                  "responses",
                  "survey_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Analysis result for v012",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "description": "Indicates if there was an error in processing the request.",
                      "default": false
                    },
                    "flagged": {
                      "type": "boolean",
                      "description": "Indicates if any fraudulent activity was detected. If true, we recommend reviewing the participant's responses."
                    },
                    "model": {
                      "type": "string",
                      "description": "String specifying the model type.",
                      "example": "alias-v012"
                    },
                    "num_checks_failed": {
                      "type": "integer",
                      "description": "Number of checks that failed.",
                      "example": 1
                    },
                    "checks": {
                      "type": "object",
                      "description": "Details of specific checks and their outcomes. Available options include:\n- \"All responses empty\" - The participant didn't answer any question.\n- \"Text chunking\" - Some text was generated in a chunk (rather than character-by-character).\n- \"GPT paste artifacts\" - Text is formatted in a highly similar way to ChatGPT.\n- \"Self-duplicate response\" - The participant gave the same answer to more than one question.\n- \"Cross-duplicate response\" - The participant gave the same answer as another participant (excluding simple answers like 'Yes' or 'No').\n- \"Unnatural typing speed\" - The participant typed abnormally fast or slow.\n- \"Unnatural pausing\" - The participant paused in a way that is common to GPTs but not to humans.\n- \"Automated test: Junk\" - Our ML model flags this response as likely junk.\n- \"Automated test: GPT\" - Our ML model flags this response as likely generated by a GPT.\n",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": [
                        "Automated test: Junk"
                      ]
                    },
                    "response_groups": {
                      "type": "object",
                      "description": "Dictionary where key corresponds to question_id and value corresponds to the cluster of duplicated responses."
                    },
                    "warning": {
                      "type": "string",
                      "description": "A message that provides additional context or information about potential issues detected during the request processing. Only returned if there is a warning."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v011": {
      "post": {
        "summary": "Detailed survey response analysis for v011",
        "description": "Analyzes survey responses to detect fraudulent activity with detailed request and response structure.",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication. Include this in the header of your request."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "participant_id": {
                    "type": "string",
                    "description": "A unique identifier for the participant.",
                    "example": "participant_123"
                  },
                  "question_histories": {
                    "type": "object",
                    "description": "Records the changes made by the participant while answering the survey. Each key is the id of the question, and the value is the array of changes generated by our Javascript tracker.",
                    "example": {
                      "Q1": []
                    }
                  },
                  "questions": {
                    "type": "object",
                    "description": "Contains the survey questions. Each key is the id of the question, and the values are the text of the open-ended survey questions as shown to the participant.",
                    "example": {
                      "Q1": "How do you feel our product has impacted your daily workflow?"
                    }
                  },
                  "responses": {
                    "type": "object",
                    "description": "Records the participant's final responses to each question.",
                    "example": {
                      "Q1": "I really like pineapple on pizza."
                    }
                  },
                  "survey_id": {
                    "type": "string",
                    "description": "A unique identifier for the survey.",
                    "example": "survey_456"
                  }
                },
                "required": [
                  "participant_id",
                  "questions",
                  "responses",
                  "survey_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Analysis result for v011",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "description": "Indicates if there was an error in processing the request."
                    },
                    "flagged": {
                      "type": "boolean",
                      "description": "Indicates if any fraudulent activity was detected. If true, we recommend reviewing the participant's responses."
                    },
                    "num_checks_failed": {
                      "type": "integer",
                      "description": "Number of checks that failed.",
                      "example": 1
                    },
                    "checks": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Details of specific checks and their outcomes. Includes various checks like automated tests and response analysis.",
                      "example": [
                        "Automated test: Junk"
                      ]
                    },
                    "warning": {
                      "type": "string",
                      "description": "A message that provides additional context or information about potential issues detected during the request processing. Only returned if there is a warning."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}